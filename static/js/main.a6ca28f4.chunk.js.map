{"version":3,"sources":["api/goods.ts","App.tsx","GoodsList.tsx","index.tsx"],"names":["getAll","fetch","then","response","json","SortType","GoodsList","goods","map","good","style","color","name","id","App","useState","setGoods","NotSelected","sortType","setSortType","sortGoods","All","FirstFive","sort","good1","good2","localeCompare","slice","OnlyRed","filter","useEffect","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"0LAMO,SAASA,IACd,OAAOC,MAJI,yEAKRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,U,KAGxB,ICLFC,E,OCCQC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAIC,MAAO,CAAEC,MAAOF,EAAKE,OAAuB,UAAQ,OAAxD,SACGF,EAAKG,MAD+BH,EAAKI,W,SDJ7CR,O,aAAAA,I,yBAAAA,I,qBAAAA,I,8BAAAA,M,KAOE,IAAMS,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOR,EAAP,KAAcS,EAAd,KACA,EAAgCD,mBAAmBV,EAASY,aAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAY,WAChB,OAAQF,GACN,KAAKb,EAASgB,IACZrB,IAASE,KAAKc,GACd,MACF,KAAKX,EAASiB,UDVXtB,IACJE,MAAK,SAAAK,GAAK,OAAIA,EACZgB,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMZ,KAAKc,cAAcD,EAAMb,YACxDV,MAAK,SAAAK,GAAK,OAAIA,EAAMoB,MAAM,EAAG,MCQdzB,KAAKc,GACjB,MACF,KAAKX,EAASuB,QDNX5B,IACJE,MAAK,SAAAK,GAAK,OAAIA,EACZsB,QAAO,SAAApB,GAAI,MAAmB,QAAfA,EAAKE,YCKLT,KAAKc,GACnB,MACF,QACEA,EAAS,MAQf,OAJAc,qBAAU,WACRV,MACC,CAACF,IAGF,sBAAKa,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMd,EAAYd,EAASgB,MAHtC,4BAQA,wBACEW,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMd,EAAYd,EAASiB,YAHtC,gCAQA,wBACEU,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMd,EAAYd,EAASuB,UAHtC,4BAQA,cAAC,EAAD,CAAWrB,MAAOA,QE9DxB2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.a6ca28f4.chunk.js","sourcesContent":["import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\n// Tests required me to send a new request for each click. So commented these out.\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((good1, good2) => good1.name.localeCompare(good2.name)))\n    .then(goods => goods.slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods\n      .filter(good => good.color === 'red')); // get only red\n};\n","import React, { useEffect, useState } from 'react';\nimport { get5First, getAll, getRedGoods } from './api/goods';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\n\nenum SortType {\n  All,\n  FirstFive,\n  OnlyRed,\n  NotSelected,\n}\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [sortType, setSortType] = useState<SortType>(SortType.NotSelected);\n\n  const sortGoods = () => {\n    switch (sortType) {\n      case SortType.All:\n        getAll().then(setGoods);\n        break;\n      case SortType.FirstFive:\n        get5First().then(setGoods);\n        break;\n      case SortType.OnlyRed:\n        getRedGoods().then(setGoods);\n        break;\n      default:\n        setGoods([]);\n    }\n  };\n\n  useEffect(() => {\n    sortGoods();\n  }, [sortType]);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => setSortType(SortType.All)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => setSortType(SortType.FirstFive)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => setSortType(SortType.OnlyRed)}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import React from 'react';\r\nimport { Good } from './types/Good';\r\n\r\ntype Props = {\r\n  goods: Good[]\r\n};\r\n\r\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\r\n  <ul>\r\n    {goods.map(good => (\r\n      <li style={{ color: good.color }} key={good.id} data-cy=\"good\">\r\n        {good.name}\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}